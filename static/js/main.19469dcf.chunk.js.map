{"version":3,"sources":["redux/auth/auth-operations.js","redux/contacts/contacts-actions.js","components/Navigation/Navigation.module.css","components/AuthNavigation/AuthNavigation.module.css","components/UserMenu/UserMenu.module.css","components/Continer/Container.module.css","components/AppBar/AppBar.module.css","components/App/App.module.css","redux/auth/auth-slice.js","redux/contacts/contacts-reduser.js","redux/store.js","components/Continer/Container.jsx","redux/auth/auth-selectors.js","components/Navigation/Navigation.jsx","components/AuthNavigation/AuthNavigation.jsx","components/UserMenu/UserMenu.jsx","components/AppBar/AppBar.jsx","components/PrivatePublicRouts/PrivateRoute.js","components/PrivatePublicRouts/PublicRoute.js","components/App/App.js","index.js"],"names":["axios","defaults","baseURL","token","headers","common","Authorization","register","createAsyncThunk","credentials","a","post","data","console","log","undefined","logIn","logOut","fetchCurrentUser","_","thunkAPI","state","getState","persistedToken","auth","rejectWithValue","get","fetchContactsRequest","createAction","fetchContactsSucccess","fetchContactsError","addContactsRequest","addContactsSuccess","payload","name","number","id","addContactsError","deleteContactsRequest","deleteContacstSuccess","deleteContacstError","filterContacts","module","exports","authSlice","createSlice","initialState","user","email","isLoggedIn","isFetchingCurrentUser","extraReducers","authOperations","fulfilled","action","pending","rejected","itemsReducer","createReducer","contactsActions","filter","contact","filterReducer","toLowerCase","contactsReducer","combineReducers","items","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","authPersistConfig","key","storage","whitelist","store","configureStore","reducer","contacts","persistReducer","authReducer","devTools","process","persistor","persistStore","Container","children","className","s","container","getIsLoggedIn","statte","getUserName","Navigation","useSelector","authSelectors","exact","to","link","activeClassName","activeLink","AuthNavigation","UserMenu","dispatch","useDispatch","type","onClick","evt","preventDefault","AppBar","header","PrivateRoute","routeProps","PublicRoute","restricted","redirectTo","shouldRedirect","HomeView","lazy","RegisterView","LoginView","PhoneBook","App","useEffect","fallback","path","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.19469dcf.chunk.js","sourcesContent":["import axios from 'axios';\r\nimport toast, { Toaster } from 'react-hot-toast';\r\n\r\nimport { createAsyncThunk } from '@reduxjs/toolkit';\r\n\r\naxios.defaults.baseURL = 'https://connections-api.herokuapp.com';\r\n\r\nconst token = {\r\n  set(token) {\r\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\r\n  },\r\n  unset() {\r\n    axios.defaults.headers.common.Authorization = '';\r\n  },\r\n};\r\n\r\nexport const register = createAsyncThunk('auth/register', async credentials => {\r\n  try {\r\n    const { data } = await axios.post('/users/signup', credentials);\r\n\r\n    console.log(data);\r\n\r\n    if (data === undefined) {\r\n      return;\r\n    }\r\n\r\n    token.set(data.token);\r\n\r\n    return data;\r\n  } catch (error) {}\r\n});\r\n\r\nexport const logIn = createAsyncThunk('auth/login', async credentials => {\r\n  try {\r\n    const { data } = await axios.post('/users/login', credentials);\r\n\r\n    return data;\r\n  } catch (error) {}\r\n});\r\n\r\nexport const logOut = createAsyncThunk('auth/logout', async () => {\r\n  try {\r\n    await axios.post('/users/logout');\r\n    token.unset();\r\n  } catch (error) {}\r\n});\r\n\r\nexport const fetchCurrentUser = createAsyncThunk(\r\n  'auth/refresh',\r\n  async (_, thunkAPI) => {\r\n    const state = thunkAPI.getState();\r\n    const persistedToken = state.auth.token;\r\n\r\n    if (persistedToken === null) {\r\n      return thunkAPI.rejectWithValue();\r\n    }\r\n\r\n    token.set(persistedToken);\r\n    try {\r\n      const { data } = await axios.get('/users/current');\r\n\r\n      return data;\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  },\r\n);\r\n","import { createAction } from '@reduxjs/toolkit';\n\nexport const fetchContactsRequest = createAction(\n  'contacts/fetchContactsRequest',\n);\n\nexport const fetchContactsSucccess = createAction(\n  'contacts/fetchContactsSucccess',\n);\n\nexport const fetchContactsError = createAction('contacts/fetchContactsError');\n\nexport const addContactsRequest = createAction('contacts/addContactRequest');\nexport const addContactsSuccess = createAction(\n  'contacts/addContactSuccess',\n  ({ name, number, id }) => ({\n    payload: {\n      name,\n      number,\n      id,\n    },\n  }),\n);\nexport const addContactsError = createAction('contacts/addContactError');\n\nexport const deleteContactsRequest = createAction(\n  'contacts/deleteContactRequest',\n);\nexport const deleteContacstSuccess = createAction(\n  'contacts/deleteContactSuccess',\n);\nexport const deleteContacstError = createAction('contacts/deleteContactError');\n\nexport const filterContacts = createAction('contacts/filter');\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"link\":\"Navigation_link__NhKI8\",\"activeLink\":\"Navigation_activeLink__2-CEH Navigation_link__NhKI8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"link\":\"AuthNavigation_link__2vC2U\",\"activeLink\":\"AuthNavigation_activeLink__27DeG AuthNavigation_link__2vC2U\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"UserMenu_container__3yUl7\",\"name\":\"UserMenu_name__1N0_a\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__hvJLA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"AppBar_header__2-sSf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__2gNMb\"};","import { createSlice } from '@reduxjs/toolkit';\r\nimport * as authOperations from './auth-operations';\r\n\r\nconst initialState = {\r\n  user: { name: null, email: null },\r\n  token: null,\r\n  isLoggedIn: false,\r\n  isFetchingCurrentUser: false,\r\n};\r\n\r\nconst authSlice = createSlice({\r\n  name: 'auth',\r\n  initialState,\r\n  extraReducers: {\r\n    [authOperations.register.fulfilled]: (state, action) => {\r\n      if (action.payload !== undefined) {\r\n        state.user = action.payload.user;\r\n        state.token = action.payload.token;\r\n        state.isLoggedIn = true;\r\n      }\r\n    },\r\n\r\n    [authOperations.logIn.fulfilled]: (state, action) => {\r\n      if (action.payload !== undefined) {\r\n        state.user = action.payload.user;\r\n        state.token = action.payload.token;\r\n        state.isLoggedIn = true;\r\n      }\r\n    },\r\n    [authOperations.logOut.fulfilled]: state => {\r\n      state.user = { name: null, email: null };\r\n      state.token = null;\r\n      state.isLoggedIn = false;\r\n    },\r\n    [authOperations.fetchCurrentUser.pending]: state => {\r\n      state.isFetchingCurrentUser = true;\r\n    },\r\n    [authOperations.fetchCurrentUser.fulfilled]: (state, action) => {\r\n      state.user = action.payload;\r\n      state.isLoggedIn = true;\r\n      state.isFetchingCurrentUser = false;\r\n    },\r\n    [authOperations.fetchCurrentUser.rejected]: (state, action) => {\r\n      state.isFetchingCurrentUser = false;\r\n    },\r\n  },\r\n});\r\n\r\nexport default authSlice.reducer;\r\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport * as contactsActions from './contacts-actions';\n\nconst itemsReducer = createReducer([], {\n  [contactsActions.fetchContactsSucccess]: (_, { payload }) => {\n    return payload;\n  },\n  [contactsActions.addContactsSuccess]: (state, { payload }) => {\n    return [...state, payload];\n  },\n\n  [contactsActions.deleteContacstSuccess]: (state, { payload }) => {\n    return state.filter(contact => contact.id !== payload);\n  },\n});\n\nconst filterReducer = createReducer('', {\n  [contactsActions.filterContacts]: (_, { payload }) => payload.toLowerCase(),\n});\n\nexport const contactsReducer = combineReducers({\n  items: itemsReducer,\n  filter: filterReducer,\n});\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport authReducer from './auth/auth-slice';\r\nimport { contactsReducer } from './contacts/contacts-reduser';\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n];\r\n\r\nconst authPersistConfig = {\r\n  key: 'auth',\r\n  storage,\r\n  whitelist: ['token'],\r\n};\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    contacts: contactsReducer,\r\n    auth: persistReducer(authPersistConfig, authReducer),\r\n  },\r\n  middleware,\r\n  devTools: process.env.NODE_ENV === 'development',\r\n});\r\n\r\nexport const persistor = persistStore(store);\r\n","import s from './Container.module.css';\r\n\r\nexport default function Container({ children }) {\r\n  return <div className={s.container}>{children}</div>;\r\n}\r\n","export const getIsLoggedIn = statte => statte.auth.isLoggedIn;\r\nexport const getUserName = state => state.auth.user.name;\r\nexport const isFetchingCurrentUser = state => state.auth.isFetchingCurrentUser;\r\n","import { NavLink } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\nimport * as authSelectors from '../../redux/auth/auth-selectors';\r\nimport s from './Navigation.module.css';\r\n\r\nexport function Navigation() {\r\n  const isLoggedIn = useSelector(authSelectors.getIsLoggedIn);\r\n  return (\r\n    <nav>\r\n      <NavLink exact to=\"/\" className={s.link} activeClassName={s.activeLink}>\r\n        Home\r\n      </NavLink>\r\n\r\n      {isLoggedIn && (\r\n        <NavLink\r\n          to=\"/phonebook\"\r\n          className={s.link}\r\n          activeClassName={s.activeLink}\r\n        >\r\n          PhoneBook\r\n        </NavLink>\r\n      )}\r\n    </nav>\r\n  );\r\n}\r\n","import { NavLink } from 'react-router-dom';\r\nimport s from './AuthNavigation.module.css';\r\n\r\nexport function AuthNavigation() {\r\n  return (\r\n    <div>\r\n      <NavLink\r\n        to=\"/registration\"\r\n        className={s.link}\r\n        activeClassName={s.activeLink}\r\n      >\r\n        Registration\r\n      </NavLink>\r\n\r\n      <NavLink to=\"/login\" className={s.link} activeClassName={s.activeLink}>\r\n        Login\r\n      </NavLink>\r\n    </div>\r\n  );\r\n}\r\n","import { useSelector, useDispatch } from 'react-redux';\r\nimport * as authOperations from '../../redux/auth/auth-operations';\r\nimport * as authSelectors from '../../redux/auth/auth-selectors';\r\nimport s from './UserMenu.module.css';\r\n\r\nexport function UserMenu() {\r\n  const name = useSelector(authSelectors.getUserName);\r\n  const dispatch = useDispatch();\r\n\r\n  const handleLogOut = evt => {\r\n    evt.preventDefault();\r\n\r\n    dispatch(authOperations.logOut());\r\n  };\r\n\r\n  return (\r\n    <div className={s.container}>\r\n      <span className={s.name}> Welcome, {name}</span>\r\n      <button type=\"button\" onClick={handleLogOut}>\r\n        Logout\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n","import { useSelector } from 'react-redux';\r\nimport { Navigation } from '../Navigation/Navigation';\r\nimport { AuthNavigation } from '../AuthNavigation/AuthNavigation';\r\nimport { UserMenu } from '../UserMenu/UserMenu';\r\nimport * as authSelectors from '../../redux/auth/auth-selectors';\r\nimport s from './AppBar.module.css';\r\n\r\nexport default function AppBar() {\r\n  const isLoggedIn = useSelector(authSelectors.getIsLoggedIn);\r\n  return (\r\n    <header className={s.header}>\r\n      <Navigation />\r\n\r\n      {!isLoggedIn ? <AuthNavigation /> : <UserMenu />}\r\n    </header>\r\n  );\r\n}\r\n","import { Redirect, Route } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\nimport * as authSelectors from '../../redux/auth/auth-selectors';\r\n\r\nexport default function PrivateRoute({ children, ...routeProps }) {\r\n  const isLoggedIn = useSelector(authSelectors.getIsLoggedIn);\r\n  return (\r\n    <Route {...routeProps}>\r\n      {isLoggedIn ? children : <Redirect to=\"/login\" />}\r\n    </Route>\r\n  );\r\n}\r\n","import { useSelector } from 'react-redux';\r\nimport { Redirect, Route } from 'react-router-dom';\r\nimport * as authSelectors from '../../redux/auth/auth-selectors';\r\n\r\nexport default function PublicRoute({\r\n  children,\r\n  restricted = false,\r\n  redirectTo = '/phonebook',\r\n  ...routeProps\r\n}) {\r\n  const isLoggedIn = useSelector(authSelectors.getIsLoggedIn);\r\n  const shouldRedirect = isLoggedIn && restricted;\r\n  return (\r\n    <Route {...routeProps}>\r\n      {shouldRedirect ? <Redirect to={redirectTo} /> : children}\r\n    </Route>\r\n  );\r\n}\r\n","import { useEffect, Suspense, lazy } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Switch, Route } from 'react-router-dom';\nimport Container from '../Continer/Container.jsx';\nimport AppBar from '../AppBar/AppBar.jsx';\nimport PrivateRoute from '../PrivatePublicRouts/PrivateRoute';\nimport PublicRoute from '../PrivatePublicRouts/PublicRoute.js';\nimport * as authOperations from '../../redux/auth/auth-operations';\nimport * as authSelectors from '../../redux/auth/auth-selectors';\nimport s from './App.module.css';\n\nconst HomeView = lazy(() => import('../../views/HomeView'));\nconst RegisterView = lazy(() => import('../../views/RegisterView'));\nconst LoginView = lazy(() => import('../../views/LoginView'));\nconst PhoneBook = lazy(() => import('../PhoneBook/PhoneBook.jsx'));\n\nexport function App() {\n  const dispatch = useDispatch();\n  const isFetchingCurrentUser = useSelector(\n    authSelectors.isFetchingCurrentUser,\n  );\n\n  useEffect(() => {\n    dispatch(authOperations.fetchCurrentUser());\n  }, [dispatch]);\n\n  return (\n    <Container>\n      <AppBar />\n      {!isFetchingCurrentUser && (\n        <Switch>\n          <Suspense fallback={<p>Loading ...</p>}>\n            <PublicRoute exact path=\"/\">\n              <HomeView />\n            </PublicRoute>\n\n            <PublicRoute exact path=\"/registration\" restricted>\n              <RegisterView />\n            </PublicRoute>\n\n            <PublicRoute exact path=\"/login\" redirectTo=\"/phonebook\" restricted>\n              <LoginView />\n            </PublicRoute>\n\n            <PrivateRoute path=\"/phonebook\">\n              <PhoneBook />\n            </PrivateRoute>\n          </Suspense>\n        </Switch>\n      )}\n    </Container>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { store, persistor } from './redux/store';\nimport s from './index.module.css';\nimport { App } from './components/App/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <BrowserRouter>\n          <App />\n        </BrowserRouter>\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}