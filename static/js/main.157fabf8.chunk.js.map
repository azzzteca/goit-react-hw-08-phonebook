{"version":3,"sources":["views/RegisterView.module.css","views/LoginView.module.css","components/PhoneBook/InputForm/InputForm.module.css","components/Navigation/Navigation.module.css","components/AuthNavigation/AuthNavigation.module.css","components/PhoneBook/ContactList/ContactList.module.css","components/UserMenu/UserMenu.module.css","components/PhoneBook/Filter/Filter.module.css","components/Continer/Container.module.css","components/AppBar/AppBar.module.css","views/HomeView.module.css","components/PhoneBook/ContactListItem/ContactListItem.module.css","components/PhoneBook/PhoneBook.module.css","components/App/App.module.css","redux/auth/auth-operations.js","redux/auth/auth-slice.js","redux/contacts/contacts-actions.js","redux/contacts/contacts-reduser.js","redux/store.js","components/Continer/Container.jsx","redux/auth/auth-selectors.js","components/Navigation/Navigation.jsx","components/AuthNavigation/AuthNavigation.jsx","components/UserMenu/UserMenu.jsx","components/AppBar/AppBar.jsx","views/HomeView.js","views/RegisterView.js","views/LoginView.js","components/PhoneBook/Section/Section.jsx","redux/contacts/contacts-selectors.js","components/PhoneBook/InputForm/InputForm.jsx","redux/contacts/contacts-operations.js","components/PhoneBook/ContactListItem/ContactListItem.jsx","components/PhoneBook/ContactList/ContactList.jsx","components/PhoneBook/Filter/Filter.jsx","components/PhoneBook/PhoneBook.jsx","components/PrivatePublicRouts/PrivateRoute.js","components/PrivatePublicRouts/PublicRoute.js","components/App/App.js","index.js"],"names":["module","exports","axios","defaults","baseURL","token","headers","common","Authorization","register","createAsyncThunk","credentials","a","post","data","logIn","logOut","fetchCurrentUser","_","thunkAPI","state","getState","persistedToken","auth","rejectWithValue","get","console","log","authSlice","createSlice","name","initialState","user","email","isLoggedIn","isFetchingCurrentUser","registerError","loginError","extraReducers","authOperations","fulfilled","action","undefined","payload","pending","rejected","fetchContactsRequest","createAction","fetchContactsSucccess","fetchContactsError","addContactsRequest","addContactsSuccess","number","id","addContactsError","deleteContactsRequest","deleteContacstSuccess","deleteContacstError","filterContacts","itemsReducer","createReducer","contactsActions","filter","contact","filterReducer","toLowerCase","contactsReducer","combineReducers","items","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","authPersistConfig","key","storage","whitelist","store","configureStore","reducer","contacts","persistReducer","authReducer","devTools","process","persistor","persistStore","Container","children","className","s","container","getIsLoggedIn","statte","getUserName","Navigation","useSelector","authSelectors","exact","to","link","activeClassName","activeLink","AuthNavigation","UserMenu","dispatch","useDispatch","type","onClick","evt","preventDefault","AppBar","header","HomePage","RegisterView","useState","setName","setEmail","password","setPassword","handleChange","target","value","section","form","onSubmit","reset","autoComplete","label","input","onChange","LoginForm","Section","title","getContacts","getFilter","InputForm","setNumber","inputChange","newContact","savedContacts","find","alert","uuidv4","then","catch","error","pattern","required","ContactListItem","delete","ContactList","useEffect","list","includes","map","item","Filter","PhoneBook","length","PrivateRoute","routeProps","PublicRoute","restricted","redirectTo","shouldRedirect","App","path","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.157fabf8.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"RegisterView_section__3r40c\",\"form\":\"RegisterView_form__cGEeG\",\"label\":\"RegisterView_label__2AJDD\",\"input\":\"RegisterView_input__kU_ht\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"LoginView_section__Ebl44\",\"form\":\"LoginView_form__zWgL9\",\"label\":\"LoginView_label__2eR04\",\"input\":\"LoginView_input__3h9PW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"InputForm_form__2gJal\",\"label\":\"InputForm_label__1M2OK\",\"input\":\"InputForm_input__3Iche\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"link\":\"Navigation_link__NhKI8\",\"activeLink\":\"Navigation_activeLink__2-CEH Navigation_link__NhKI8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"link\":\"AuthNavigation_link__2vC2U\",\"activeLink\":\"AuthNavigation_activeLink__27DeG AuthNavigation_link__2vC2U\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"ContactList_section__kfFQu\",\"list\":\"ContactList_list__1vNNB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"UserMenu_container__3yUl7\",\"name\":\"UserMenu_name__1N0_a\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__PoUCW\",\"input\":\"Filter_input__242XA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__hvJLA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"AppBar_header__2-sSf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"HomeView_header__2_HNu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"name\":\"ContactListItem_name__1WTrf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"PhoneBook_section__wBLuL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__2gNMb\"};","import axios from 'axios';\r\n\r\nimport { createAsyncThunk } from '@reduxjs/toolkit';\r\n\r\naxios.defaults.baseURL = 'https://connections-api.herokuapp.com';\r\n\r\nconst token = {\r\n  set(token) {\r\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\r\n  },\r\n  unset() {\r\n    axios.defaults.headers.common.Authorization = '';\r\n  },\r\n};\r\n\r\nexport const register = createAsyncThunk('auth/register', async credentials => {\r\n  try {\r\n    const { data } = await axios.post('/users/signup', credentials);\r\n\r\n    token.set(data.token);\r\n\r\n    return data;\r\n  } catch (error) {}\r\n});\r\n\r\nexport const logIn = createAsyncThunk('auth/login', async credentials => {\r\n  try {\r\n    const { data } = await axios.post('/users/login', credentials);\r\n\r\n    return data;\r\n  } catch (error) {}\r\n});\r\n\r\nexport const logOut = createAsyncThunk('auth/logout', async () => {\r\n  try {\r\n    await axios.post('/users/logout');\r\n    token.unset();\r\n  } catch (error) {}\r\n});\r\n\r\nexport const fetchCurrentUser = createAsyncThunk(\r\n  'auth/refresh',\r\n  async (_, thunkAPI) => {\r\n    const state = thunkAPI.getState();\r\n    const persistedToken = state.auth.token;\r\n\r\n    if (persistedToken === null) {\r\n      return thunkAPI.rejectWithValue();\r\n    }\r\n\r\n    token.set(persistedToken);\r\n    try {\r\n      const { data } = await axios.get('/users/current');\r\n\r\n      return data;\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  },\r\n);\r\n","import { createSlice } from '@reduxjs/toolkit';\r\nimport * as authOperations from './auth-operations';\r\n\r\nconst initialState = {\r\n  user: { name: null, email: null },\r\n  token: null,\r\n  isLoggedIn: false,\r\n  isFetchingCurrentUser: false,\r\n  registerError: false,\r\n  loginError: false,\r\n};\r\n\r\nconst authSlice = createSlice({\r\n  name: 'auth',\r\n  initialState,\r\n  extraReducers: {\r\n    [authOperations.register.fulfilled]: (state, action) => {\r\n      if (action.payload === undefined) {\r\n        state.registerError = true;\r\n        return;\r\n      }\r\n      state.user = action.payload.user;\r\n      state.token = action.payload.token;\r\n      state.isLoggedIn = true;\r\n      state.registerError = false;\r\n    },\r\n\r\n    [authOperations.logIn.fulfilled]: (state, action) => {\r\n      if (action.payload === undefined) {\r\n        state.loginError = true;\r\n        return;\r\n      }\r\n      state.user = action.payload.user;\r\n      state.token = action.payload.token;\r\n      state.isLoggedIn = true;\r\n      state.loginError = false;\r\n    },\r\n    [authOperations.logOut.fulfilled]: state => {\r\n      state.user = { name: null, email: null };\r\n      state.token = null;\r\n      state.isLoggedIn = false;\r\n    },\r\n    [authOperations.fetchCurrentUser.pending]: state => {\r\n      state.isFetchingCurrentUser = true;\r\n    },\r\n    [authOperations.fetchCurrentUser.fulfilled]: (state, action) => {\r\n      state.user = action.payload;\r\n      state.isLoggedIn = true;\r\n      state.isFetchingCurrentUser = false;\r\n    },\r\n    [authOperations.fetchCurrentUser.rejected]: (state, action) => {\r\n      state.isFetchingCurrentUser = false;\r\n    },\r\n  },\r\n});\r\n\r\nexport default authSlice.reducer;\r\n","import { createAction } from '@reduxjs/toolkit';\n\nexport const fetchContactsRequest = createAction(\n  'contacts/fetchContactsRequest',\n);\n\nexport const fetchContactsSucccess = createAction(\n  'contacts/fetchContactsSucccess',\n);\n\nexport const fetchContactsError = createAction('contacts/fetchContactsError');\n\nexport const addContactsRequest = createAction('contacts/addContactRequest');\nexport const addContactsSuccess = createAction(\n  'contacts/addContactSuccess',\n  ({ name, number, id }) => ({\n    payload: {\n      name,\n      number,\n      id,\n    },\n  }),\n);\nexport const addContactsError = createAction('contacts/addContactError');\n\nexport const deleteContactsRequest = createAction(\n  'contacts/deleteContactRequest',\n);\nexport const deleteContacstSuccess = createAction(\n  'contacts/deleteContactSuccess',\n);\nexport const deleteContacstError = createAction('contacts/deleteContactError');\n\nexport const filterContacts = createAction('contacts/filter');\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport * as contactsActions from './contacts-actions';\n\nconst itemsReducer = createReducer([], {\n  [contactsActions.fetchContactsSucccess]: (_, { payload }) => {\n    return payload;\n  },\n  [contactsActions.addContactsSuccess]: (state, { payload }) => {\n    return [...state, payload];\n  },\n\n  [contactsActions.deleteContacstSuccess]: (state, { payload }) => {\n    return state.filter(contact => contact.id !== payload);\n  },\n});\n\nconst filterReducer = createReducer('', {\n  [contactsActions.filterContacts]: (_, { payload }) => payload.toLowerCase(),\n});\n\nexport const contactsReducer = combineReducers({\n  items: itemsReducer,\n  filter: filterReducer,\n});\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport authReducer from './auth/auth-slice';\r\nimport { contactsReducer } from './contacts/contacts-reduser';\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n];\r\n\r\nconst authPersistConfig = {\r\n  key: 'auth',\r\n  storage,\r\n  whitelist: ['token'],\r\n};\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    contacts: contactsReducer,\r\n    auth: persistReducer(authPersistConfig, authReducer),\r\n  },\r\n  middleware,\r\n  devTools: process.env.NODE_ENV === 'development',\r\n});\r\n\r\nexport const persistor = persistStore(store);\r\n","import s from './Container.module.css';\r\n\r\nexport default function Container({ children }) {\r\n  return <div className={s.container}>{children}</div>;\r\n}\r\n","export const getIsLoggedIn = statte => statte.auth.isLoggedIn;\r\nexport const getUserName = state => state.auth.user.name;\r\nexport const isFetchingCurrentUser = state => state.auth.isFetchingCurrentUser;\r\n","import { NavLink } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\nimport * as authSelectors from '../../redux/auth/auth-selectors';\r\nimport s from './Navigation.module.css';\r\n\r\nexport function Navigation() {\r\n  const isLoggedIn = useSelector(authSelectors.getIsLoggedIn);\r\n  return (\r\n    <nav>\r\n      <NavLink exact to=\"/\" className={s.link} activeClassName={s.activeLink}>\r\n        Home\r\n      </NavLink>\r\n\r\n      {isLoggedIn && (\r\n        <NavLink\r\n          to=\"/phonebook\"\r\n          className={s.link}\r\n          activeClassName={s.activeLink}\r\n        >\r\n          PhoneBook\r\n        </NavLink>\r\n      )}\r\n    </nav>\r\n  );\r\n}\r\n","import { NavLink } from 'react-router-dom';\r\nimport s from './AuthNavigation.module.css';\r\n\r\nexport function AuthNavigation() {\r\n  return (\r\n    <div>\r\n      <NavLink\r\n        to=\"/registration\"\r\n        className={s.link}\r\n        activeClassName={s.activeLink}\r\n      >\r\n        Registration\r\n      </NavLink>\r\n\r\n      <NavLink to=\"/login\" className={s.link} activeClassName={s.activeLink}>\r\n        Login\r\n      </NavLink>\r\n    </div>\r\n  );\r\n}\r\n","import { useSelector, useDispatch } from 'react-redux';\r\nimport * as authOperations from '../../redux/auth/auth-operations';\r\nimport * as authSelectors from '../../redux/auth/auth-selectors';\r\nimport s from './UserMenu.module.css';\r\n\r\nexport function UserMenu() {\r\n  const name = useSelector(authSelectors.getUserName);\r\n  const dispatch = useDispatch();\r\n\r\n  const handleLogOut = evt => {\r\n    evt.preventDefault();\r\n\r\n    dispatch(authOperations.logOut());\r\n  };\r\n\r\n  return (\r\n    <div className={s.container}>\r\n      <span className={s.name}> Welcome, {name}</span>\r\n      <button type=\"button\" onClick={handleLogOut}>\r\n        Logout\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n","import { useSelector } from 'react-redux';\r\nimport { Navigation } from '../Navigation/Navigation';\r\nimport { AuthNavigation } from '../AuthNavigation/AuthNavigation';\r\nimport { UserMenu } from '../UserMenu/UserMenu';\r\nimport * as authSelectors from '../../redux/auth/auth-selectors';\r\nimport s from './AppBar.module.css';\r\n\r\nexport default function AppBar() {\r\n  const isLoggedIn = useSelector(authSelectors.getIsLoggedIn);\r\n  return (\r\n    <header className={s.header}>\r\n      <Navigation />\r\n\r\n      {!isLoggedIn ? <AuthNavigation /> : <UserMenu />}\r\n    </header>\r\n  );\r\n}\r\n","import s from './HomeView.module.css';\r\n\r\nexport default function HomePage() {\r\n  return (\r\n    <div className={s.header}>\r\n      <h1>Добро пожаловать на страницу Вашей телефонной книги!</h1>\r\n    </div>\r\n  );\r\n}\r\n","import { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport * as authOperations from '../redux/auth/auth-operations';\r\nimport s from './RegisterView.module.css';\r\n\r\nexport default function RegisterView() {\r\n  const [name, setName] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const handleSubmit = evt => {\r\n    evt.preventDefault();\r\n\r\n    dispatch(authOperations.register({ name, email, password }));\r\n\r\n    setName('');\r\n    setEmail('');\r\n    setPassword('');\r\n    evt.target.reset();\r\n  };\r\n\r\n  const handleChange = evt => {\r\n    const { name, value } = evt.target;\r\n\r\n    switch (name) {\r\n      case 'name':\r\n        return setName(value);\r\n\r\n      case 'email':\r\n        return setEmail(value);\r\n\r\n      case 'password':\r\n        return setPassword(value);\r\n\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <section className={s.section}>\r\n      <h1> REGISTRATION FORM</h1>\r\n\r\n      <form className={s.form} onSubmit={handleSubmit} autoComplete=\"off\">\r\n        <label className={s.label}>\r\n          Name\r\n          <input\r\n            className={s.input}\r\n            type=\"text\"\r\n            name=\"name\"\r\n            onChange={handleChange}\r\n          />\r\n        </label>\r\n        <label className={s.label}>\r\n          Email\r\n          <input\r\n            className={s.input}\r\n            type=\"email\"\r\n            name=\"email\"\r\n            onChange={handleChange}\r\n          />\r\n        </label>\r\n        <label className={s.label}>\r\n          Password\r\n          <input\r\n            className={s.input}\r\n            type=\"password\"\r\n            name=\"password\"\r\n            onChange={handleChange}\r\n          />\r\n        </label>\r\n        <button type=\"submit\">Register</button>\r\n      </form>\r\n    </section>\r\n  );\r\n}\r\n","import { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport * as authOperations from '../redux/auth/auth-operations';\r\nimport s from './LoginView.module.css';\r\n\r\nexport default function LoginForm() {\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const dispatch = useDispatch();\r\n\r\n  const handleChange = evt => {\r\n    const { name, value } = evt.target;\r\n\r\n    switch (name) {\r\n      case 'email':\r\n        return setEmail(value);\r\n      case 'password':\r\n        return setPassword(value);\r\n\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const handleSubmit = evt => {\r\n    evt.preventDefault();\r\n\r\n    dispatch(authOperations.logIn({ email, password }));\r\n\r\n    setEmail('');\r\n    setPassword('');\r\n    evt.target.reset();\r\n  };\r\n\r\n  return (\r\n    <section className={s.section}>\r\n      <h1>LOGIN FORM</h1>\r\n      <form className={s.form} onSubmit={handleSubmit} autoComplete=\"off\">\r\n        <label className={s.label}>\r\n          Email\r\n          <input\r\n            className={s.input}\r\n            type=\"email\"\r\n            name=\"email\"\r\n            onChange={handleChange}\r\n          />\r\n        </label>\r\n        <label className={s.label}>\r\n          Password\r\n          <input\r\n            className={s.input}\r\n            type=\"password\"\r\n            name=\"password\"\r\n            onChange={handleChange}\r\n          />\r\n        </label>\r\n\r\n        <button type=\"submit\">Login</button>\r\n      </form>\r\n    </section>\r\n  );\r\n}\r\n","import PropTypes from 'prop-types';\r\n\r\nexport function Section({ title, children }) {\r\n  return (\r\n    <div className=\"section\">\r\n      {title && <h2>{title}</h2>}\r\n      {children}\r\n    </div>\r\n  );\r\n}\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string,\r\n  children: PropTypes.node,\r\n};\r\n","export const getContacts = state => state.contacts.items;\r\nexport const getFilter = state => state.contacts.filter;\r\n","import { useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport * as contactsOperations from '../../../redux/contacts/contacts-operations';\r\nimport { getContacts } from '../../../redux/contacts/contacts-selectors';\r\nimport s from './InputForm.module.css';\r\n\r\nexport function InputForm() {\r\n  const [name, setName] = useState('');\r\n  const [number, setNumber] = useState('');\r\n  const contacts = useSelector(getContacts);\r\n  const dispatch = useDispatch();\r\n\r\n  const inputChange = evt => {\r\n    const { name, value } = evt.target;\r\n\r\n    switch (name) {\r\n      case 'name':\r\n        setName(value);\r\n        break;\r\n\r\n      case 'number':\r\n        setNumber(value);\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  const handleFormSubmit = evt => {\r\n    evt.preventDefault();\r\n\r\n    const newContact = name.toLowerCase();\r\n    const savedContacts = contacts.find(\r\n      contact => contact.name.toLowerCase() === newContact,\r\n    );\r\n\r\n    if (savedContacts) {\r\n      alert(name + 'is already in contacts.');\r\n      return;\r\n    }\r\n\r\n    dispatch(contactsOperations.addContacts({ name, number }));\r\n\r\n    evt.target.reset();\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleFormSubmit} className={s.form}>\r\n      <label className={s.label}>\r\n        Name\r\n        <input\r\n          className={s.input}\r\n          onChange={inputChange}\r\n          type=\"text\"\r\n          name=\"name\"\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          required\r\n        />\r\n      </label>\r\n\r\n      <label className={s.label}>\r\n        Number\r\n        <input\r\n          className={s.input}\r\n          onChange={inputChange}\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n          required\r\n        />\r\n      </label>\r\n\r\n      <button type=\"submit\">Add contact</button>\r\n    </form>\r\n  );\r\n}\r\n","import axios from 'axios';\r\n\r\nimport * as contactsActions from './contacts-actions';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nexport const fetchContacts = () => async dispatch => {\r\n  dispatch(contactsActions.fetchContactsRequest());\r\n\r\n  try {\r\n    const { data } = await axios.get('/contacts');\r\n    dispatch(contactsActions.fetchContactsSucccess(data));\r\n  } catch (error) {\r\n    dispatch(contactsActions.fetchContactsError(error));\r\n  }\r\n};\r\n\r\nexport const addContacts = contact => dispatch => {\r\n  dispatch(contactsActions.addContactsRequest());\r\n\r\n  axios\r\n    .post('/contacts', {\r\n      name: contact.name,\r\n      number: contact.number,\r\n      id: uuidv4(),\r\n    })\r\n    .then(({ data }) => dispatch(contactsActions.addContactsSuccess(data)))\r\n    .catch(error => dispatch(contactsActions.addContactsError(error)));\r\n};\r\n\r\nexport const deleteContacts = id => dispatch => {\r\n  dispatch(contactsActions.deleteContactsRequest());\r\n\r\n  axios\r\n    .delete(`/contacts/${id}`)\r\n    .then(() => dispatch(contactsActions.deleteContacstSuccess(id)))\r\n    .catch(error => dispatch(contactsActions.deleteContacstError(error)));\r\n};\r\n","import { useDispatch } from 'react-redux';\r\nimport * as contactsOperations from '../../../redux/contacts/contacts-operations';\r\nimport s from './ContactListItem.module.css';\r\n\r\nexport function ContactListItem({ contact }) {\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <>\r\n      <span className={s.name}>\r\n        {contact.name} {contact.number}\r\n      </span>\r\n      <button\r\n        type=\"button\"\r\n        id={contact.id}\r\n        onClick={evt =>\r\n          dispatch(contactsOperations.deleteContacts(evt.target.id))\r\n        }\r\n      >\r\n        Delete\r\n      </button>\r\n    </>\r\n  );\r\n}\r\n","import { useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { ContactListItem } from '../../PhoneBook/ContactListItem/ContactListItem';\r\nimport {\r\n  getContacts,\r\n  getFilter,\r\n} from '../../../redux/contacts/contacts-selectors';\r\nimport * as contactsOperations from '../../../redux/contacts/contacts-operations';\r\nimport s from './ContactList.module.css';\r\n\r\nexport function ContactList({ children }) {\r\n  const contacts = useSelector(getContacts);\r\n  const filter = useSelector(getFilter);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(contactsOperations.fetchContacts());\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <section className={s.section}>\r\n      <h2>Contacts</h2>\r\n      {children}\r\n      <ul className={s.list}>\r\n        {!filter\r\n          ? contacts.map(contact => (\r\n              <li key={uuidv4()} className={s.item}>\r\n                <ContactListItem contact={contact} />\r\n              </li>\r\n            ))\r\n          : contacts\r\n              .filter(contact => contact.name.toLowerCase().includes(filter))\r\n              .map(contact => (\r\n                <li key={contact.id} className={s.item}>\r\n                  <ContactListItem contact={contact} />\r\n                </li>\r\n              ))}\r\n      </ul>\r\n    </section>\r\n  );\r\n}\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.array,\r\n  filter: PropTypes.string,\r\n  children: PropTypes.node,\r\n};\r\n","import { useDispatch } from 'react-redux';\r\nimport * as contactsActions from '../../../redux/contacts/contacts-actions';\r\nimport s from './Filter.module.css';\r\n\r\nexport function Filter() {\r\n  const dispatch = useDispatch();\r\n  return (\r\n    <label className={s.label}>\r\n      Find contacts by name\r\n      <input\r\n        className={s.input}\r\n        type=\"text\"\r\n        onChange={evt =>\r\n          dispatch(contactsActions.filterContacts(evt.target.value))\r\n        }\r\n      />\r\n    </label>\r\n  );\r\n}\r\n","import { useSelector } from 'react-redux';\r\nimport { Section } from '../PhoneBook/Section/Section';\r\nimport { InputForm } from '../PhoneBook/InputForm/InputForm';\r\nimport { ContactList } from '../PhoneBook/ContactList/ContactList';\r\nimport { Filter } from '../PhoneBook/Filter/Filter';\r\nimport { getContacts } from '../../redux/contacts/contacts-selectors';\r\nimport s from './PhoneBook.module.css';\r\n\r\nexport default function PhoneBook() {\r\n  const contacts = useSelector(getContacts);\r\n  return (\r\n    <div className={s.section}>\r\n      <Section title={'Phonebook'}>\r\n        <InputForm />\r\n\r\n        <ContactList>{contacts.length > 2 && <Filter />}</ContactList>\r\n      </Section>\r\n    </div>\r\n  );\r\n}\r\n","import { Redirect, Route } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\nimport * as authSelectors from '../../redux/auth/auth-selectors';\r\n\r\nexport default function PrivateRoute({ children, ...routeProps }) {\r\n  const isLoggedIn = useSelector(authSelectors.getIsLoggedIn);\r\n  return (\r\n    <Route {...routeProps}>\r\n      {isLoggedIn ? children : <Redirect to=\"/login\" />}\r\n    </Route>\r\n  );\r\n}\r\n","import { useSelector } from 'react-redux';\r\nimport { Redirect, Route } from 'react-router-dom';\r\nimport * as authSelectors from '../../redux/auth/auth-selectors';\r\n\r\nexport default function PublicRoute({\r\n  children,\r\n  restricted = false,\r\n  redirectTo = '/phonebook',\r\n  ...routeProps\r\n}) {\r\n  const isLoggedIn = useSelector(authSelectors.getIsLoggedIn);\r\n  const shouldRedirect = isLoggedIn && restricted;\r\n  return (\r\n    <Route {...routeProps}>\r\n      {shouldRedirect ? <Redirect to={redirectTo} /> : children}\r\n    </Route>\r\n  );\r\n}\r\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Switch } from 'react-router-dom';\nimport Container from '../Continer/Container.jsx';\nimport AppBar from '../AppBar/AppBar.jsx';\nimport HomeView from '../../views/HomeView';\nimport RegisterView from '../../views/RegisterView';\nimport LoginView from '../../views/LoginView';\nimport PhoneBook from '../PhoneBook/PhoneBook.jsx';\nimport PrivateRoute from '../PrivatePublicRouts/PrivateRoute';\nimport PublicRoute from '../PrivatePublicRouts/PublicRoute.js';\nimport * as authOperations from '../../redux/auth/auth-operations';\nimport * as authSelectors from '../../redux/auth/auth-selectors';\nimport s from './App.module.css';\n\nexport function App() {\n  const dispatch = useDispatch();\n  const isFetchingCurrentUser = useSelector(\n    authSelectors.isFetchingCurrentUser,\n  );\n\n  useEffect(() => {\n    dispatch(authOperations.fetchCurrentUser());\n  }, [dispatch]);\n\n  return (\n    <Container>\n      <AppBar />\n      {!isFetchingCurrentUser && (\n        <Switch>\n          <PublicRoute exact path=\"/\">\n            <HomeView />\n          </PublicRoute>\n\n          <PublicRoute exact path=\"/registration\" restricted>\n            <RegisterView />\n          </PublicRoute>\n\n          <PublicRoute exact path=\"/login\" redirectTo=\"/phonebook\" restricted>\n            <LoginView />\n          </PublicRoute>\n\n          <PrivateRoute path=\"/phonebook\">\n            <PhoneBook />\n          </PrivateRoute>\n        </Switch>\n      )}\n    </Container>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { store, persistor } from './redux/store';\nimport s from './index.module.css';\nimport { App } from './components/App/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <BrowserRouter>\n          <App />\n        </BrowserRouter>\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}